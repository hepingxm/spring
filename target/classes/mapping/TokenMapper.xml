<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmtcyx.miniapi.mapper.TokenMapper" >
  <resultMap id="BaseResultMap" type="com.xmtcyx.miniapi.model.Token" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="expire" property="expire" jdbcType="INTEGER" />
    <result column="stauts" property="stauts" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="usrid" property="usrid" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, token, expire, stauts, create_time, update_time, usrid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from token
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from token
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xmtcyx.miniapi.model.Token" >
    insert into token (id, token, expire, 
      stauts, create_time, update_time, 
      usrid)
    values (#{id,jdbcType=BIGINT}, #{token,jdbcType=VARCHAR}, #{expire,jdbcType=INTEGER}, 
      #{stauts,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{usrid,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.xmtcyx.miniapi.model.Token" >
    insert into token
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="expire != null" >
        expire,
      </if>
      <if test="stauts != null" >
        stauts,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="usrid != null" >
        usrid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="expire != null" >
        #{expire,jdbcType=INTEGER},
      </if>
      <if test="stauts != null" >
        #{stauts,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="usrid != null" >
        #{usrid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmtcyx.miniapi.model.Token" >
    update token
    <set >
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="expire != null" >
        expire = #{expire,jdbcType=INTEGER},
      </if>
      <if test="stauts != null" >
        stauts = #{stauts,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="usrid != null" >
        usrid = #{usrid,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmtcyx.miniapi.model.Token" >
    update token
    set token = #{token,jdbcType=VARCHAR},
      expire = #{expire,jdbcType=INTEGER},
      stauts = #{stauts,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      usrid = #{usrid,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>